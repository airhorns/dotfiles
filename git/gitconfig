[user]
	name = Harry Brundage
	email = harry.brundage@gmail.com
	signingkey = ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIJvOa9KKorTmbk3f6YcsPPKjRatbc8TCsh4pXxUDLr/X
[color]
  branch = auto
  diff = auto
  status = auto
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
[alias]
  remove-missing = "!git ls-files -d -z | xargs -0 git update-index --remove"
  po = "!git push --set-upstream origin \"$(git rev-parse --abbrev-ref HEAD)\""
  remove-merged = "!git branch --merged | grep -v \"\\*\" | xargs -n 1 git branch -d"

  # All the aliases relate to commits. Note that
  # they are grouped by common prefixes, so I don't
  # confuse what I want done by accident.
  c = commit
  # commit with a message
  cm = commit -m
  cma = commit -a -m
  # amending the previous commit
  ca = commit --amend
  caa = commit -a --amend -C HEAD
  cah = commit --amend --reuse-message=HEAD
  caah = commit --all --amend --reuse-message=HEAD
  cip = "!git commit --message \"WIP - $(hostname) $(TZ=America/Toronto date +'%a, %b %d %I:%M %p') \n\n[no-changelog-required]\" -a"
  fip = commit -a --fixup=HEAD

  # Mother of all aliases
  cahpof = "!git commit --all --amend --reuse-message=HEAD && git push origin --force"

  mainup = "!git checkout main && git pull --rebase --autostash && git checkout - && git rebase main"

  # reset
  ## soft resets
  r = reset
  r1 = reset HEAD^
  r2 = reset HEAD^^
  ## hard resets
  rh = reset --hard
  rh1 = reset HEAD^ --hard
  rh2 = reset HEAD^^ --hard

  # shortcuts for commands
  s = status
  d = diff
  a = add
  aa = add -A
  co = checkout
  cob = checkout -b
  b = branch
  l = log
  f = fetch
  r = reset
  p = push
	tree = log -n 50 --pretty=\"%C(yellow)%h %Creset %s %C(red)(%cr)%Creset\" --graph
  pof = push origin --force

  # rebase
  rim = rebase -i main
  rem = rebase main
  rcon = rebase --continue
  rab = rebase --abort

  rmpof = "!git rebase main && git push origin --force"
  rimpof = "!git rebase --interactive main && git push origin --force"
  rempof = "!git rebase main && git push origin --force"
	up = pull --rebase --autostash
	next = stack next
	prev = stack previous
	reword = stack reword
	amend = stack amend
	sync = stack sync
	run = stack run

[difftool "Kaleidoscope"]
	cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"
[difftool]
	prompt = false
[diff]
	tool = Kaleidoscope
[merge]
	tool = Kaleidoscope
	conflictstyle = diff3
[mergetool "threesome"]
cmd = "mvim -f $BASE $LOCAL $REMOTE $MERGED -c 'ThreesomeInit'"
trustExitCode = true
[difftool "diffmerge"]
	cmd = diffmerge \"$LOCAL\" \"$REMOTE\"
[mergetool "diffmerge"]
	cmd = "diffmerge --merge --result=\"$MERGED\" \"$LOCAL\" \"$(if test -f \"$BASE\"; then echo \"$BASE\"; else echo \"$LOCAL\"; fi)\" \"$REMOTE\""
	trustExitCode = true
[mergetool "Kaleidoscope"]
	cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
	trustExitCode = true
[mergetool]
	prompt = false
[core]
	excludesfile = /Users/airhorns/.gitignore
[hub]
  protocol = https
[credential]
	helper = osxkeychain
[push]
	default = simple
	autoSetupRemote = true
[filter "hawser"]
	clean = git hawser clean %f
	smudge = git hawser smudge %f
	required = true
[rerere]
	enabled = true
[fetch]
	prune = true
[gpg]
	format = ssh
[commit]
	gpgsign = true
[init]
	defaultBranch = main
[rebase]
  autoSquash = true
[gpg "ssh"]
	program = /Applications/1Password.app/Contents/MacOS/op-ssh-sign
[absorb]
  autoStageIfNothingStaged = true
