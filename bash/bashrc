#-------------------------------------------------------------
# Source global definitions (if any)
#-------------------------------------------------------------

if [ -f /etc/bashrc ]; then
        . /etc/bashrc   # --> Read /etc/bashrc, if present.
fi

#-------------------------------------------------------------
# Some settings
#-------------------------------------------------------------

# Other sources

# ulimit -S -c 0          # Don't want any coredumps.
# set -o notify
# set -o noclobber
# set -o ignoreeof
# set -o nounset
#set -o xtrace          # Useful for debuging.

#Enable options:
shopt -s cdspell
shopt -s cdable_vars
shopt -s checkhash
shopt -s checkwinsize
shopt -s sourcepath
shopt -s no_empty_cmd_completion
shopt -s cmdhist
shopt -s histappend histreedit histverify
shopt -s extglob        # Necessary for programmable completion.

# Disable options:
shopt -u mailwarn
unset MAILCHECK         # Don't want my shell to warn me of incoming mail.


export TIMEFORMAT=$'\nreal %3R\tuser %3U\tsys %3S\tpcpu %P\n'
export HISTTIMEFORMAT="%H:%M > "
export HISTIGNORE="&:bg:fg:ll:h"
#export HOSTFILE=$HOME/.hosts    # Put list of remote hosts in ~/.hosts ...

#-------------------------------------------------------------
# Greeting, motd etc...
#-------------------------------------------------------------

# Define some colors first:
red='\e[0;31m'
RED='\e[1;31m'
GREEN='\e[1;32m'
blue='\e[0;34m'
BLUE='\e[1;34m'
cyan='\e[0;36m'
CYAN='\e[1;36m'
NC='\e[0m'              # No Color
# --> Nice. Has the same effect as using "ansi.sys" in DOS.

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
fi


# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
        # We have color support; assume it's compliant with Ecma-48
        # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
        # a case would tend to support setf rather than setaf.)
        color_prompt=yes
    else
        color_prompt=
    fi
fi

GIT_PS1_SHOWDIRTYSTATE=true
if [ "$color_prompt" = yes ]; then
		if [ -f "/usr/local/etc/bash_completion.d/git-completion.bash" ]; then
			source "/usr/local/etc/bash_completion.d/git-completion.bash"
    	PS1="${debian_chroot:+($debian_chroot)}\[$GREEN\]\u@\h\[$NC\]:\[$BLUE\]\w\[$red\] "'$(__git_ps1 "(%s)")'"\[$NC\]\$ "
		else
			PS1='${debian_chroot:+($debian_chroot)}$(green)\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
		fi
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi

unset color_prompt force_color_prompt

# Aliases
if [ -f "$HOME/dotfiles/bash/bash_aliases" ]; then
    . "$HOME/dotfiles/bash/bash_aliases"
fi

export PATH="$HOME/bin":"/usr/local/bin":$PATH:"/usr/local/share/npm/bin"
export EDITOR="vim"
export BUNDLE_EDITOR="mvim"
export NODE_PATH="/usr/local/lib/node":$NODE_PATH
